# -*- coding: utf-8 -*-
"""prediksi_harga_rumah_regresi.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1MO-ERqrE6PGc9OIYfslD-TYl-xYTGSGJ

# Prediksi Harga Rumah Boston

Proyek ini menggunakan dataset Boston Housing untuk memprediksi harga rumah dengan model regresi linier dan random forest.
"""

import pandas as pd
import numpy as np
import matplotlib.pyplot as plt
import seaborn as sns

from sklearn.model_selection import train_test_split
from sklearn.linear_model import LinearRegression
from sklearn.ensemble import RandomForestRegressor
from sklearn.metrics import mean_squared_error, r2_score

df = pd.read_csv("/content/boston.csv")
df.head()

df.info()

df.describe()

for column in df.columns:
    plt.figure(figsize=(6, 3))
    plt.hist(df[column], bins=30, color='skyblue', edgecolor='black')
    plt.title(f'Distribusi: {column}')
    plt.xlabel(column)
    plt.ylabel('Frekuensi')
    plt.tight_layout()
    plt.show()

# Visualisasi Korelasi
plt.figure(figsize=(12,10))
sns.heatmap(df.corr(), annot=True, cmap='coolwarm')
plt.title('Heatmap Korelasi Antar Fitur')
plt.show()

# Split Data
X = df.drop('MEDV', axis=1)   # Fitur
y = df['MEDV']                # Target
X_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.2, random_state=42)

# Linear Regression
lin_reg = LinearRegression()
lin_reg.fit(X_train, y_train)
y_pred_lin = lin_reg.predict(X_test)

print('Linear Regression')
print('RMSE:', np.sqrt(mean_squared_error(y_test, y_pred_lin)))
print('R2 Score:', r2_score(y_test, y_pred_lin))

# Random Forest Regression
rf = RandomForestRegressor(n_estimators=100, random_state=42)
rf.fit(X_train, y_train)
y_pred_rf = rf.predict(X_test)

print('Random Forest')
print('RMSE:', np.sqrt(mean_squared_error(y_test, y_pred_rf)))
print('R2 Score:', r2_score(y_test, y_pred_rf))

# Visualisasi Hasil Prediksi
plt.figure(figsize=(12,5))
plt.subplot(1,2,1)
plt.scatter(y_test, y_pred_lin)
plt.xlabel('Actual Prices')
plt.ylabel('Predicted Prices')
plt.title('Linear Regression')

plt.subplot(1,2,2)
plt.scatter(y_test, y_pred_rf)
plt.xlabel('Actual Prices')
plt.ylabel('Predicted Prices')
plt.title('Random Forest')

plt.tight_layout()
plt.show()